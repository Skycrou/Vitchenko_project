//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WEB_LAP.AnalysisService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AnalysisService.IAnalysisSales")]
    public interface IAnalysisSales {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnalysisSales/GetAnalysisSales", ReplyAction="http://tempuri.org/IAnalysisSales/GetAnalysisSalesResponse")]
        string GetAnalysisSales(double sales_ofLastYear, double sales_ofNewYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnalysisSales/GetAnalysisSales", ReplyAction="http://tempuri.org/IAnalysisSales/GetAnalysisSalesResponse")]
        System.Threading.Tasks.Task<string> GetAnalysisSalesAsync(double sales_ofLastYear, double sales_ofNewYear);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAnalysisSalesChannel : WEB_LAP.AnalysisService.IAnalysisSales, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AnalysisSalesClient : System.ServiceModel.ClientBase<WEB_LAP.AnalysisService.IAnalysisSales>, WEB_LAP.AnalysisService.IAnalysisSales {
        
        public AnalysisSalesClient() {
        }
        
        public AnalysisSalesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AnalysisSalesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnalysisSalesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnalysisSalesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetAnalysisSales(double sales_ofLastYear, double sales_ofNewYear) {
            return base.Channel.GetAnalysisSales(sales_ofLastYear, sales_ofNewYear);
        }
        
        public System.Threading.Tasks.Task<string> GetAnalysisSalesAsync(double sales_ofLastYear, double sales_ofNewYear) {
            return base.Channel.GetAnalysisSalesAsync(sales_ofLastYear, sales_ofNewYear);
        }
    }
}
